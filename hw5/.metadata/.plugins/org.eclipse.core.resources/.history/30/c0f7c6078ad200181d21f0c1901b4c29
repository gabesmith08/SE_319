package TicTacToe;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class GameOps extends JFrame{

	public static void main(String [] args)
	{
		new GameOps();
	}

	private JButton bA1, bA2, bA3, bB1, bB2, bB3, bC1, bC2, bC3;
	private int turnCount = 0;
	private ImageIcon imageX = new ImageIcon("x.jpg");
	private ImageIcon imageO = new ImageIcon("o.jpg");
	private GameBoard board;

	public GameOps(){
		// Create grid
		this.setSize(650,650);
	    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    this.setTitle("Tic-Tac-Toe");
		JPanel panel1 = new JPanel();
	    panel1.setSize(650,650);
	    panel1.setLayout(new GridLayout(3,3));
	    bA1 = createButton("A1");
	    bA2 = createButton("A2");
	    bA3 = createButton("A3");
	    bB1 = createButton("B1");
	    bB2 = createButton("B2");
	    bB3 = createButton("B3");
	    bC1 = createButton("C1");
	    bC2 = createButton("C2");
	    bC3 = createButton("C3");
		panel1.add(bA1);
		panel1.add(bA2);
		panel1.add(bA3);
		panel1.add(bB1);
		panel1.add(bB2);
		panel1.add(bB3);
		panel1.add(bC1);
		panel1.add(bC2);
		panel1.add(bC3);
	    this.add(panel1);
	    this.setVisible(true);
		board = new GameBoard();

	}

	private JButton createButton(String square){
		JButton button = new JButton();
		button.setPreferredSize(new Dimension(150, 150));
		Font f = new Font("Dialog", Font.PLAIN, 72);
		button.setFont(f);
		button.addActionListener(click -> btnClick(click, square));
		return button;
	}

	private void btnClick(ActionEvent click, String square){
		if(turnCount == 0){

			JButton button = (JButton)click.getSource();
			button.setIcon(imageX);
			board.placeMark(square, 1);

			if (board.isGameOver() == 3){
				JOptionPane.showMessageDialog(null, "Draw!", "Game Over", JOptionPane.INFORMATION_MESSAGE);
				resetGame();
				return;
			}
			if (board.isGameOver() == 1){
				JOptionPane.showMessageDialog(null, "Congratulations, X won the game!", "WINNER", JOptionPane.INFORMATION_MESSAGE);
				resetGame();
				return;
			}
			turnCount = 1;
			JOptionPane.showMessageDialog(null, "Player O's turn!", "Next Turn", JOptionPane.INFORMATION_MESSAGE);
		}else if(turnCount == 1){

			JButton button = (JButton)click.getSource();
			button.setIcon(imageO);
			board.placeMark(square,2);
			turnCount = 0;
			if (board.isGameOver() == 2){
				JOptionPane.showMessageDialog(null, "Congratulations, O won the game!", "WINNER", JOptionPane.INFORMATION_MESSAGE);
				resetGame();
			}else{
					JOptionPane.showMessageDialog(null, "Player X's turn!", "Next Turn", JOptionPane.INFORMATION_MESSAGE);
				}
			return;
			}
		}

	private void resetGame(){
		board.reset();
		bA1.setIcon(null);
		bA2.setIcon(null);
		bA3.setIcon(null);
		bB1.setIcon(null);
		bB2.setIcon(null);
		bB3.setIcon(null);
		bC1.setIcon(null);
		bC2.setIcon(null);
		bC3.setIcon(null);
	}
}
